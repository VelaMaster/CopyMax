
package Vista;

import Conexion.Conexion;
import Modelo.Ticket;
import Modelo.Venta;

import Modelo.VentaManager;

import java.awt.KeyEventDispatcher;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.sql.*;
import java.sql.PreparedStatement;
import java.sql.SQLException;

/**
 *
 * @author Artorias<maxstell5549@hotmail.com>
 */
public class Metododepago extends javax.swing.JFrame {
   
    Ventas ventasPanel ;
    private double totalVenta;
    Venta ventadatos;
    
    
   public Metododepago(double totalVenta, Ventas ventasPanel) {
        this.ventasPanel = ventasPanel;
        this.totalVenta = totalVenta;
        this.ventadatos = ventasPanel.getVentadatos(); // Obtener ventadatos de ventasPanel
        
        
        initComponents();
        totalventa();
        addDocumentListeners();
        Pago1.requestFocusInWindow();
        Pago2.setText("0.00");
        agregarKeyListenerGlobal();
    }

   
    private void agregarKeyListenerGlobal() {
        KeyboardFocusManager.getCurrentKeyboardFocusManager().addKeyEventDispatcher(new KeyEventDispatcher() {
            @Override
            public boolean dispatchKeyEvent(KeyEvent e) {
                if (e.getID() == KeyEvent.KEY_PRESSED && e.getKeyCode() == KeyEvent.VK_ESCAPE) {
                    dispose();
                }
                
                return false;
            }
        });
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        importetxtfield = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Pago1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cambiotxtfield = new javax.swing.JTextField();
        btnFinalizarventa = new javax.swing.JButton();
        Pago2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        MetodoPago1combo = new javax.swing.JComboBox<>();
        MetodoPago2combo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(204, 204, 255));
        jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Venta");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Logopng (Custom) (1).png"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Importe:");

        importetxtfield.setBackground(new java.awt.Color(0, 0, 0));
        importetxtfield.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        importetxtfield.setForeground(new java.awt.Color(51, 255, 51));
        importetxtfield.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        importetxtfield.setText("0.00");
        importetxtfield.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        importetxtfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importetxtfieldActionPerformed(evt);
            }
        });
        importetxtfield.setBackground(new java.awt.Color(0, 0, 0));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Pago:");

        Pago1.setBackground(new java.awt.Color(255, 255, 255));
        Pago1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        Pago1.setForeground(new java.awt.Color(0, 0, 0));
        Pago1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Pago1.setToolTipText("");
        Pago1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Pago1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Cambio:");

        cambiotxtfield.setBackground(new java.awt.Color(0, 0, 0));
        cambiotxtfield.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        cambiotxtfield.setForeground(new java.awt.Color(51, 255, 51));
        cambiotxtfield.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cambiotxtfield.setText("0.00");
        cambiotxtfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambiotxtfieldActionPerformed(evt);
            }
        });

        btnFinalizarventa.setBackground(new java.awt.Color(153, 204, 255));
        btnFinalizarventa.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        btnFinalizarventa.setForeground(new java.awt.Color(0, 0, 0));
        btnFinalizarventa.setText("Realizar Venta");
        btnFinalizarventa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarventaActionPerformed(evt);
            }
        });

        Pago2.setBackground(new java.awt.Color(255, 255, 255));
        Pago2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        Pago2.setForeground(new java.awt.Color(0, 0, 0));
        Pago2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Pago2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Pago2ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Pago:");

        MetodoPago1combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Efectivo", "Tarjeta", "Vales de Despensa", " " }));

        MetodoPago2combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Efectivo", "Tarjeta", "Vales de Despensa", " " }));
        MetodoPago2combo.setSelectedIndex(-1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(btnFinalizarventa)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addGap(70, 70, 70)
                .addComponent(jLabel1)
                .addGap(153, 153, 153))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(importetxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(MetodoPago2combo, 0, 1, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(jLabel6)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(MetodoPago1combo, 0, 1, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cambiotxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(Pago1)
                            .addComponent(Pago2))))
                .addGap(14, 14, 14))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(importetxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(Pago1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MetodoPago1combo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(Pago2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MetodoPago2combo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cambiotxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(btnFinalizarventa)
                .addGap(25, 25, 25))
        );

        importetxtfield.setEditable(false);
        cambiotxtfield.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void importetxtfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importetxtfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_importetxtfieldActionPerformed

     private void addDocumentListeners() {
        Pago1.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                 calcularCambio();
            }
            public void removeUpdate(DocumentEvent e) {
                calcularCambio();
            }
            public void insertUpdate(DocumentEvent e) {
                calcularCambio();
            }
        });

        Pago2.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                calcularCambio();
            }
            public void removeUpdate(DocumentEvent e) {
                calcularCambio();
            }
            public void insertUpdate(DocumentEvent e) {
                calcularCambio();
            }
        });
    }

     
    private void Pago1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Pago1ActionPerformed
       calcularCambio();
    }//GEN-LAST:event_Pago1ActionPerformed

    private void cambiotxtfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambiotxtfieldActionPerformed

    }//GEN-LAST:event_cambiotxtfieldActionPerformed

    private void btnFinalizarventaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarventaActionPerformed
       
        finalizarVenta();
      
    }//GEN-LAST:event_btnFinalizarventaActionPerformed

    private void Pago2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Pago2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Pago2ActionPerformed
    
    private  void totalventa(){
        
        importetxtfield.setText(String.valueOf(totalVenta));

        
    }
    private void calcularCambio() {
       
        try {
            double pago1 = Double.parseDouble(Pago1.getText());
            double pago2 = Double.parseDouble(Pago2.getText());
            double totalPagado = pago1 + pago2;
            double cambio = totalPagado - totalVenta;
            
            // Formatear el cambio a dos decimales
            DecimalFormat df = new DecimalFormat("0.00");
            cambiotxtfield.setText(df.format(cambio));
            
            // Desactivar el botón si el total pagado es menor al total de la venta
            btnFinalizarventa.setEnabled(totalPagado >= totalVenta);
            
        } catch (NumberFormatException ex) {
            cambiotxtfield.setText("0.00");
            btnFinalizarventa.setEnabled(false);
            // Mensaje de validación opcional
            // JOptionPane.showMessageDialog(this, "Por favor, ingrese un monto válido.");
        }
    }

    private void finalizarVenta() {
    double totalVenta = Double.parseDouble(importetxtfield.getText());
    double pago1 = Double.parseDouble(Pago1.getText());
    double pago2 = Double.parseDouble(Pago2.getText());
    double recibidodinero = pago1 + pago2;
    double cambio = recibidodinero - totalVenta;
    String metodopago1= MetodoPago1combo.getSelectedItem().toString();
    
    int idVenta = VentaManager.getInstance().agregarVenta(
        ventadatos.getUsuario(), 
        ventadatos.getCliente(), 
        ventadatos.getItems(), 
        ventadatos.getSubtotal(), 
        ventadatos.getImpuesto(), 
        ventadatos.getDescuento(), 
        ventadatos.getTotal(), 
        recibidodinero, 
        cambio,
        metodopago1
        
    );
    

    if (idVenta != -1) {
       
        if (!actualizarTotalCaja(totalVenta)) {
            dispose();
            return;
        }
       
        finalizarticket(idVenta, recibidodinero, cambio);
        JOptionPane.showMessageDialog(this, "Venta finalizada.\n Total: " + totalVenta + "\nCambio: $" + cambio);
        VentaManager.getInstance().agregarVenta(totalVenta);
        Ventas.getInstance().ActualizarinventarioBd();      
        Productos.getInstance().llenarTabla();
        ventasPanel.limpiarentradas();
        dispose();
    } else {
        JOptionPane.showMessageDialog(this, "Error al guardar la venta en la base de datos.");
    }
}
    
   private void finalizarticket(int idVenta, double recibidodinero, double cambio) {
    String Usuario = ventadatos.getUsuario();
    String cliente = ventadatos.getCliente();
    String fecha = java.time.LocalDateTime.now().toString();
    String items = ventadatos.getItems();
    String subtotal = String.valueOf(ventadatos.getSubtotal());
    String impuesto = String.valueOf(ventadatos.getImpuesto());
    String total = String.valueOf(ventadatos.getTotal());
    String recibido = String.valueOf(recibidodinero);
    String cambioStr = String.valueOf(cambio);
    String descuento = String.valueOf(ventadatos.getDescuento());
    String correo = ventadatos.getCorreo();

           // Validar si el cliente tiene correo
        if (correo == null || correo.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El cliente no tiene un correo electrónico registrado.");
            return;
        }

        // Generar el PDF del ticket
        Ticket ticketVenta = new Ticket(
            String.valueOf(idVenta), // Aquí pasas el ID de la venta
            Usuario, 
            cliente, 
            fecha, 
            items, 
            subtotal, 
            descuento, 
            impuesto, 
            total, 
            recibido, 
            cambioStr
        );
        String directory = "C:\\Users\\maxst\\OneDrive\\Escritorio";
        String fileName = "ticket_" + java.time.LocalDateTime.now().toString().replace(":", "-") + ".pdf";
        String filePath = directory + "\\" + fileName;

        ticketVenta.print(filePath);

        // Enviar el PDF por correo
       ticketVenta.enviarEmailConPDF(correo, filePath);
         
     
    }

  private boolean actualizarTotalCaja(double totalVenta) {
    // Consulta para verificar el registro actual
    String querySeleccionar = "SELECT TotalCaja, TotalVentas FROM caja WHERE DATE(FechaInicio) = CURDATE()";
    // Consulta para actualizar el total de caja y las ventas
    String queryActualizar = "UPDATE caja SET TotalCaja = TotalCaja + ?, TotalVentas = TotalVentas + ? WHERE DATE(FechaInicio) = CURDATE()";

    try (Connection con = new Conexion().getConnection();
         PreparedStatement pstSeleccionar = con.prepareStatement(querySeleccionar);
         PreparedStatement pstActualizar = con.prepareStatement(queryActualizar)) {

        // Verificar si hay un registro de caja para el día actual
        ResultSet rs = pstSeleccionar.executeQuery();
        if (rs.next()) {
            // Actualizar el total de la caja y las ventas
            pstActualizar.setDouble(1, totalVenta); // Incrementar TotalCaja
            pstActualizar.setDouble(2, totalVenta); // Incrementar TotalVentas
            int filasActualizadas = pstActualizar.executeUpdate();
            if (filasActualizadas > 0) {
                JOptionPane.showMessageDialog(null, "El total de la caja y de las ventas se actualizó correctamente.");
                return true; // Proceso exitoso
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo actualizar el total de la caja y las ventas.", "Error", JOptionPane.ERROR_MESSAGE);
                return false; // Error, detener ejecución
            }
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese el fondo inicial \nNo hay un registro de caja para el día actual.", "Error", JOptionPane.WARNING_MESSAGE);
            return false; // Advertencia, detener ejecución
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al actualizar el total de la caja y las ventas: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        return false; // Error, detener ejecución
    }
}
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> MetodoPago1combo;
    private javax.swing.JComboBox<String> MetodoPago2combo;
    private javax.swing.JTextField Pago1;
    private javax.swing.JTextField Pago2;
    private javax.swing.JButton btnFinalizarventa;
    private javax.swing.JTextField cambiotxtfield;
    private javax.swing.JTextField importetxtfield;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
